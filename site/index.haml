---
title: Choc - Bret Victor's 'Learnable Programming' implemented in Javascript
layout: default
---
%script{:src => "{{ site.baseurl }}scripts/choc/two-annotations.js"}
%script{:src => "{{ site.baseurl }}scripts/examples/parabola.js"}
%script{:src => "{{ site.baseurl }}scripts/examples/parabola-timeline.js"}
%script{:src => "{{ site.baseurl }}scripts/examples/triangle-fan-timeline.js"}
%script{:src => "{{ site.baseurl }}scripts/examples/bouncing-ball.js"}

%header
  .row
    .large-6.columns.title-container
      %h1#title 
        Choc
      #subtitle
        Traceable programming
    .large-6.columns.description
      %p
        Choc is a tool for thinking powerful thoughts by stepping through code.
        It is an implementation of several ideas found in Bret Victor's 
        %span.proper
          %a{:href => "http://worrydream.com/LearnableProgramming/"}
            Learnable Programming.

.row
  .large-12.large-centered.columns
    %h2
      Demo 1 — 
      %b
        Show each step

    .choc-wrapper#demo-1
      .canvas-container.x-canvas
        #parabola-canvas
      #choc-editor-for-parabola.canvas-editor

.row
  .large-1.columns
    &nbsp;

  .large-10.columns
    %p
      Thinking procedurally is one of the hardest concepts to grasp for the beginning programmer.

    %p 
      Choc is a toolkit for teachers to craft small programs that can be explored
      interactively. 

    -# %blockquote
    -#   Choc is a tool to think with.

    %p
      Choc is different from other "live-coding" environments in that each step
      of the execution is controlled by the learner. The first example above
      shows the most fundamental features of Choc:

      %ul
        %li
          The ability to scrub through each step of a program

        %li
          A clear description of what each step is doing

        %li
          The ability to drag constants and see their effect

        %li
          Completely editable code

  .large-1.columns
    &nbsp;

.row
  .large-12.large-centered.columns
    %h2
      Demo 2 — 
      %b
        Make the flow visible

    .choc-wrapper
      .canvas-container.x-canvas
        #parabola-timeline-canvas
      #choc-editor-for-parabola-with-timeline.canvas-editor

.row
  .large-1.columns
    &nbsp;
  .large-10.columns
    %p
      %em.demo-note
        The code is fully editable. This demo uses the 
        %a{:href => "http://jonobr1.github.io/two.js/"}
          Two.js API

    %p
      In the example above, each frame that executes displays a
      %span{:class => "circle executed inline-circle"}
        &nbsp;
      dot. By organizing program execution in time, we can relate to the execution flow geometrically. Seeing spatial patterns in execution give us a stronger intution about how our programs run.

    %p
      Choc provides a framework to teach programming on a computer. That sounds silly, but code is often pasted flatly into documents and this provides us no advantage over paper. 

    %p
      By showing the flow of a program explicitly we can build new intellectual structures for thinking about how procedures execute.

  .large-1.columns
    &nbsp;


.row
  .large-12.columns
    %h2
      Demo 3 — 
      %b
        Show the state

    .choc-wrapper
      .canvas-container
        #triangle-fan-2-canvas
      #choc-editor-for-triangle-fan-2.canvas-editor

.row
  .large-1.columns
    &nbsp;
  .large-10.columns

    %p
      %em.demo-note
        Click on the slider and then use the arrow keys to step through the code.

    %p
      As we show the flow
      %em structure
      we can also show step
      %em content.

    %p
      Looking at the code above, the 
      %tt triangle.fill
      line is impossibly dense. 

      If you were reading the code, you might be able to tell that we're setting the 
      %tt fill
      of a 
      %tt triangle
      to a string that is an RGB value that changes with 
      %tt i
      \.
      But the code gives no insight into what color that actually is.

    %p
      In the timeline the cells display rich information such as 
      %b< 
        rotation
      ,
      %b< 
        shape
      , or
      %b< 
        color
      \.
      Choc provides hooks that allow us to annotate 
      %em any library 
      with custom descriptions and timeline rendering.


  .large-1.columns
    &nbsp;


.row
  .large-12.columns
    %h2
      Demo 4 — 
      %b
        Make time tangible

    .choc-wrapper
      .canvas-container
        .canvas-wrapper
          #frameCanvas
          #fader
          #previewCanvas

      #choc-editor-for-bouncing-ball.canvas-editor

.row
  .large-1.columns
    &nbsp;
  .large-10.columns
    %p
      Choc helps learners draw pathways from 
      %b action-ways-of-knowing 
      to 
      %b symbolic-ways-of-knowing.

    %p
      Try dragging around the 
      %span.underlined-constants 
        underlined constants
      above. Can you find the constant that relates to "bounciness"? There are two variables above that relate to the "floor". Can you find them?

    %p
      Because we're able to play with the symbols and see their effect, our action-knowledge is directly transferrable to symbolic-knowledge.  

  .large-1.columns
    &nbsp;


%script{:src => "{{ site.baseurl }}scripts/vendor/voxel-garden.min.js"}
%script{:src => "{{ site.baseurl }}scripts/examples/voxel-game.js"}

:javascript
  function startVoxelDemo() {
    console.log("Starting Voxel Demo");

    // http://fgnass.github.io/spin.js/#?lines=13&length=40&width=10&radius=12&corners=1.0&rotate=0&trail=76&speed=1.2&direction=1&hwaccel=on
    var opts = {
      lines: 13, // The number of lines to draw
      length: 40, // The length of each line
      width: 10, // The line thickness
      radius: 12, // The radius of the inner circle
      corners: 1, // Corner roundness (0..1)
      rotate: 0, // The rotation offset
      direction: 1, // 1: clockwise, -1: counterclockwise
      color: '#000', // #rgb or #rrggbb or array of colors
      speed: 1.2, // Rounds per second
      trail: 76, // Afterglow percentage
      shadow: false, // Whether to render a shadow
      hwaccel: true, // Whether to use hardware acceleration
      className: 'spinner', // The CSS class to assign to the spinner
      zIndex: 2e9, // The z-index (defaults to 2000000000)
      top: 'auto', // Top position relative to parent in px
      left: 'auto' // Left position relative to parent in px
    };
    var target = document.getElementById('voxel-preview-container');
    var spinner = new Spinner(opts).spin(target);

    $("#game").slideDown();

    window.setTimeout(function (){
      window.ChocGame.startVoxelDemo(function() {
        console.log("showing game");
        spinner.stop();
        $("#voxel-preview-container").hide();
      });
    }, 1000);

    return false;
  }

.row.voxel
  .large-12.columns
    %h2
      Demo 5 — 
      %b
        Build a (mental) model

    #voxel-preview-container 
      %a{:href => "#", :onclick => "startVoxelDemo(); return false;"}
        %img{:src => "{{ site.baseurl }}images/voxel-preload-play.png", :id => "voxel-preload-image"}

      %p
        %center
          %em
            Click to load. This demo takes a while to load (but it's worth the wait). Requires WebGL, best with Chrome or Firefox.

    .choc-wrapper
      .canvas-container
        #game
      #choc-editor-for-voxel.canvas-editor

.row
  .large-1.columns
    &nbsp;
  .large-10.columns
    %p
      %em
        In the Voxel world, use arrow keys to navigate. Use the 
        %tt space 
        button to jump. Hit 
        %tt space 
        twice to fly. Use 
        %tt shift 
        to move towards the ground. 

    %p
      Choc isn't limited to 2D canvas examples. Above we're interacting with a 
      %a{:href => "http://voxeljs.com/"} Voxel.js
      world. 

    %p
      In this example, we're building a tower by 
      %a{:href => "https://banu.com/blog/7/drawing-circles/"} drawing a circle
      and repeating that process on the y-axis.

    %p
      We don't have to build a 
      %tt "brick"
      tower though. Try changing the first line to
      %tt "grass"
      or 
      %tt "bark"
      \. Try dragging the
      %tt radius
      or 
      %tt height
      \. 

    %blockquote
      There is a bug in the above code that causes the tower to look funny. Can you find it? The 
      %tt Math.sqrt
      function returns some long numbers for 
      %tt z
      that don't feel right. I wonder, what would happen if we used 
      %tt Math.round 
      to smooth them out?
        
    %p
      A goal of Choc is to encourage both exploration and reflection. The hope is to give learners the ability to explore ideas without a bug being "wrong", "bad", or "a mistake". Hopefully as one learns to explore the properties of a microworld, they'll learn to transfer habits of exploration into the rest of their lives.

  .large-1.columns
    &nbsp;

.row
  .large-1.columns
    &nbsp;
  .large-10.columns

    %h2
      %b
        Create your own

    %p 
      Choc lessons should be captured in mind-sized bites. That is, each Choc
      should be crafted around teaching a single concept that can be
      explored. We hope you'll find Choc a useful tool for teaching.

    %p 
      We've tried to make Choc easy to include into other sites. To that end, here are a few JSFiddle examples you can look at:

    .row.examples
      .large-6.columns
        .example
          %a{:href => "http://jsfiddle.net/eigenjoy/HLR85/embedded/result/", :class => "name"}
            Parabola
          %a{:href => "http://jsfiddle.net/eigenjoy/HLR85/embedded/result/"}
            %img{:src => "{{ site.baseurl }}images/thumbnails/parabola-thumb.jpg", :class => "thumbnail"}

        .example
          %a{:href => "http://jsfiddle.net/eigenjoy/smdbd/embedded/result/", :class => "name"}
            Triangle (with Timeline)
          %a{:href => "http://jsfiddle.net/eigenjoy/smdbd/embedded/result/"}
            %img{:src => "{{ site.baseurl }}images/thumbnails/triangle-fan-thumb.jpg", :class => "thumbnail"}

      .large-6.columns
        .example
          %a{:href => "http://jsfiddle.net/eigenjoy/YJSmZ/embedded/result/", :class => "name"}
            Bouncing Ball
          %a{:href => "http://jsfiddle.net/eigenjoy/YJSmZ/embedded/result/"}
            %img{:src => "{{ site.baseurl }}images/thumbnails/bouncing-ball-thumb.jpg", :class => "thumbnail"}

        .example.coming-soon
          .name
            Voxel (Coming Soon!)
          %img{:src => "{{ site.baseurl }}images/thumbnails/voxel-thumb.jpg", :class => "thumbnail"}
 
        -# .example
        -#   %a{:href => "#", :class => "name"}
        -#     Voxel
        -#   %a{:href => "#"}
        -#     %img{:src => "{{ site.baseurl }}images/thumbnails/voxel-thumb.jpg", :class => "thumbnail"}
      
  .large-1.columns
    &nbsp;


.row
  .large-1.columns
    &nbsp;
  .large-10.columns
    %h2
      %b
        Contribute
    %p
      Certainly, this version falls short of Bret Victor's original design and, ultimately, the tool it could be. This demo is an early version and there are many bugs to be worked out. That said, even in it's current form we feel it can be really helpful for both novice and experienced programmers. If you'd like to contribute, Choc is open-source and MIT licensed.

    %p
      Choc is split into two projects:
      %tt<
        %a{:href => "https://github.com/fullstackio/choc"}<
          choc
      contains the core for stepping through code and generating readable descriptions 
      %tt<
        %a{:href => "https://github.com/fullstackio/choc-explore"}<
          choc-explore
      contains this website and the examples. 

  .large-1.columns
    &nbsp;

.row
  .large-1.columns
    &nbsp;
  .large-10.columns

    %h2
      %b
        Get notified about new demos
    %p
      We built Choc to help teach programming and there are many lessons left to write. If you'd like to keep up-to-date with what's happening in the Choc community, sign up for the newsletter below (low volume: no more than one email per week). We'll send you some of the best examples of how-to-teach-programming on the web. 

    %p
      / Begin MailChimp Signup Form
      #mc_embed_signup
        %form#mc-embedded-subscribe-form.validate{action: "http://willcodeforfoo.us6.list-manage1.com/subscribe/post?u=86d6f14c7cc955128485e3b8e&id=10b0695103", method: "post", name: "mc-embedded-subscribe-form", novalidate: "", target: "_blank"}
          .mc-field-group
            %label{for: "mce-EMAIL"}
              Email Address
              %span.asterisk *
            %input#mce-EMAIL.required.email{name: "EMAIL", type: "email", value: ""}/
            %input#mc-embedded-subscribe.button{name: "subscribe", type: "submit", value: "Subscribe"}/
          #mce-responses.clear
            #mce-error-response.response{style: "display:none"}
            #mce-success-response.response{style: "display:none"}
      / End mc_embed_signup

  .large-1.columns
    &nbsp;

.discuss
  %p
    Thoughts? Comments? Come join
    %a{:href => "https://news.ycombinator.com/item?id=6458424"}
      the discussion on Hacker News

.credits
  .row
    .large-1.columns
      &nbsp;
    .large-10.columns.content
      %p
        .made-by
          Made by:
        .row
          .large-4.columns
            %a{:href => "https://twitter.com/eigenjoy"}
              %img{:src => "{{ site.baseurl }}images/fullstack/nates-big-face.png"}
            .name
              Nate Murray
            .follow
              %a{:href => "https://twitter.com/eigenjoy", :class => "twitter-follow-button", "data-show-count" => "false", "data-size" => "large"}
                Follow @eigenjoy
              :javascript
                !function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');
          .large-4.columns
            #giant-ampersand
          .large-4.columns
            %a{:href => "https://twitter.com/auser"}
              %img{:src => "{{ site.baseurl }}images/fullstack/aris-beautiful-face.png"}
            .name
              Ari Lerner
            .follow
              %a{:href => "https://twitter.com/auser", :class => "twitter-follow-button", "data-show-count" => "false", "data-size" => "large"}
                Follow @auser
              :javascript
                !function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');

      %a{:href => "http://fullstack.io"}
        %img{:src => "{{ site.baseurl }}images/fullstack/fullstack-logo-508.png"}

    .large-1.columns
      &nbsp;

#drag-this
#and-drag-this

%script{:src => "{{ site.baseurl }}scripts/index/tour.js"}
